@page "/oldLogin"
@using FRI_Quiz_Bakalarska_Praca.Data
@using FRI_Quiz_Bakalarska_Praca.Data.Database
@using FRI_Quiz_Bakalarska_Praca.Data.Model
@using Microsoft.AspNetCore.Identity
@using Microsoft.EntityFrameworkCore
@inject IDbContextFactory<ApplicationDbContext> DbFactory
@inject UserManager<User> UserManager
@inject RoleManager<IdentityRole<int>> RoleManager
@inject SignInManager<User> SignInManager
@inject AuthenticationStateProvider AuthProvider
@inject NavigationManager NavManager
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage
<Container>
    <Row>
        <Column>
            <Tabs SelectedTab="@selectedTab" SelectedTabChanged="@OnSelectedTabChanged" Pills FullWidth>
                <Items>
                    <Tab Name="login">Prihlásite sa</Tab>
                    <Tab Name="register">Zaregistujte sa</Tab>
                </Items>
                <Content>
                    <TabPanel Name="login">
                        <Card>
                            <CardBody>
                                <CardTitle>
                                    Prihlásiť sa
                                </CardTitle>
                            </CardBody>
                            <CardBody>
                                <Validations @ref="@loginValidationsRef" Mode="ValidationMode.Auto" ValidateOnLoad="false">
                                    <Validation Validator="ValidationRule.IsNotEmpty">
                                        <Field>
                                            <FieldLabel>Email</FieldLabel>
                                            <TextEdit @bind-Text="@email" Placeholder="Zadajte email...">
                                                <Feedback>
                                                    <ValidationError>Nesprávny email...</ValidationError>
                                                </Feedback>
                                            </TextEdit>
                                        </Field>
                                    </Validation>
                                    <Validation Validator="ValidationRule.IsNotEmpty">
                                        <Field>
                                            <FieldLabel>Heslo</FieldLabel>
                                            <TextEdit @bind-Text="@password" Role="TextRole.Password" Placeholder="Zadajte heslo.." />
                                        </Field>
                                    </Validation>
                                    @if (!loginSuceeded)
                                    {
                                        <Label TextColor="TextColor.Danger">Zadali ste zlé heslo</Label>
                                    } else if (!userFind)
                                    {
                                        <Label TextColor="TextColor.Danger">Zadali ste zlý email</Label>
                                    }
                                </Validations>
                            </CardBody>
                            
                            <CardBody>
                                <Button Color="Color.Primary" Clicked="@OnLoginClicked">Prihlásiť sa</Button>
                                <Button Color="Color.Danger">Zabudol som heslo</Button>
                            </CardBody>
                        </Card>
                    </TabPanel>
                    <TabPanel Name="register">
                        <Card>
                            <CardBody>
                                <CardTitle>
                                    Zaregistrujte sa
                                </CardTitle>
                            </CardBody>
                            <CardBody>
                                <Link To="https://www.facebook.com/login" Target="Target.Blank">
                                     <a class="bi bi-facebook login-icon"> Prihlásiť sa cez facebook</a>
                                </Link> <br />
                                <Link To="MicrosoftIdentity/Account/SignIn" Target="Target.Blank">
                                    <a class="bi bi-microsoft login-icon"> Prihlásiť sa cez Microsoft účet</a>
                                </Link>
                            </CardBody>
                            <CardBody>
                                <Validations @ref="@registerValidationsRef" Mode="ValidationMode.Auto" ValidateOnLoad="true">
                                    <Validation Validator="ValidationRule.IsNotEmpty">
                                        <Field>
                                            <FieldLabel>Meno</FieldLabel>
                                            <TextEdit @bind-Text="@newUser.UserName" Placeholder="Zadajte meno" />
                                             <ValidationError>Zadajte meno </ValidationError>
                                        </Field>
                                    </Validation>
                                    <Validation Validator="ValidationRule.IsEmail">
                                        <Field>
                                            <FieldLabel>Email</FieldLabel>
                                            <TextEdit @bind-Text="@newUser.Email" Placeholder="Zadajte svoj email">
                                                <Feedback>
                                                    <ValidationNone>Prosím zadajte svoj email.</ValidationNone>
                                                    <ValidationSuccess></ValidationSuccess>
                                                    <ValidationError>Zadajte platný email </ValidationError>
                                                </Feedback>
                                            </TextEdit>
                                        </Field>
                                    </Validation>
                                    <Validation Validator="ValidationRule.IsNotEmpty">
                                        <Field>
                                            <FieldLabel>Heslo</FieldLabel>
                                            <TextEdit @bind-Text="@password" Role="TextRole.Password" Placeholder="Zadajte heslo" />
                                            <ValidationError>
                                                Heslo musí obsahovať aspoň 8 znakov <br />
                                                Heslo musí obsahovať 1 veľké písmeno <br />
                                                Heslo musí obsahovať číslo <br />
                                                Heslo musí obsahovať špeciálny znak
                                            </ValidationError>
                                            @if (!registerPass)
                                            {
                                                <Label TextColor="TextColor.Danger">Zadali ste zlé heslo</Label>
                                            }
                                        </Field>
                                    </Validation>
                                </Validations>
                            </CardBody>
                            <CardBody>
                                <Button Color="Color.Primary" Clicked="@OnRegisterClicked">
                                    Vytvoriť účet
                                </Button>
                            </CardBody>
                        </Card>
                    </TabPanel>
                </Content>
            </Tabs>
        </Column>
    </Row>
   </Container>

@code {
    Validations? loginValidationsRef;
    Validations? registerValidationsRef;

    private User newUser = new User();
    private string email = string.Empty;
    private string password = string.Empty;
    private bool loginSuceeded = true;
    private bool userFind = true;
    private bool registerPass = true;
    string selectedTab = "login";

    bool rememberMe;

    private Task OnSelectedTabChanged(string name)
    {
        selectedTab = name;

        return Task.CompletedTask;
    }

    private async Task OnLoginClicked()
    {
        if (await ValidatePassword(password) && await loginValidationsRef.ValidateAll())
        {
            var user = UserManager.FindByEmailAsync(email);
            if (user != null)
            {
                var passValid = await UserManager.CheckPasswordAsync(await user, password);
                if (passValid)
                {
                    await ((OwnAuthenticationProvider)AuthProvider).UserAuthenticated(email);
                    await sessionStorage.SetItemAsync("email", email);
                    await loginValidationsRef.ClearAll();
                    NavManager.NavigateTo("/");
                } else
                {
                    loginSuceeded = false;
                    password = "";
                }

            } else
            { 

                userFind = false;
                password = "";
            } 
        }
        else
        {
            loginSuceeded = false;
            password = "";
        }

    }
    private async Task<bool> ValidatePassword(string password)
    {
        var isLengthValid = password.Length >= 8;
        var hasUppercase = password.Any(char.IsUpper);
        var hasNumber = password.Any(char.IsDigit);
        var hasSpecialChar = password.Any(ch => !char.IsLetterOrDigit(ch));

        return isLengthValid && hasUppercase && hasNumber && hasSpecialChar;
    }

    private async Task OnRegisterClicked()
    {
        if (await ValidatePassword(password) && await registerValidationsRef.ValidateAll())
        {
            using var dbContext = DbFactory.CreateDbContext();

            var result = await UserManager.CreateAsync(newUser, password);

            if (result.Succeeded)
            {
                if (!await RoleManager.RoleExistsAsync("User"))
                {
                    await RoleManager.CreateAsync(new IdentityRole<int>("User"));
                }

                await UserManager.AddToRoleAsync(newUser, "User");
            }
            await dbContext.SaveChangesAsync();
            await registerValidationsRef.ClearAll();
            password = "";
            NavManager.NavigateTo("/");

        } else
        {
            registerPass = false;
            password = "";
        }
    }
}
