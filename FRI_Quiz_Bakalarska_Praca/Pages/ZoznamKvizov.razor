@page "/zoznamkvizov"

@using FRI_Quiz_Bakalarska_Praca.Data.Database
@using FRI_Quiz_Bakalarska_Praca.Data.Model
@using Microsoft.EntityFrameworkCore
@inject IDbContextFactory<ApplicationDbContext> DbFactory

<DataGrid TItem="Quiz"
          Data="@quizzes"
          @bind-SelectedRow="@selectedQuiz"
          Editable
          Responsive
          ShowPager          
          Filterable
          FilterMethod="DataGridFilterMethod.Contains"
           CommandMode="DataGridCommandMode.ButtonRow">
     <DataGridColumns>
         <DataGridColumn Field="@nameof(Quiz.Id)" Caption="#" Sortable="false" Filterable="false" />
         <DataGridColumn Field="@nameof(Quiz.QuizName)" Caption="Názov" Editable />
         <DataGridColumn Field="@nameof(Quiz.Moderators)" DisplayFormat="" Caption="Moderátori" />
         <DataGridDateColumn Field="@nameof(Quiz.DateFrom)" Caption="Začiatok" />
         <DataGridDateColumn Field="@nameof(Quiz.DateTo)" Caption="Koniec" />
         <DataGridColumn Field="@nameof(Quiz.Type)" Caption="Typ" />
         <!--<DataGridNumericColumn Field="@nameof(Quiz.QuestionCount)" Caption="Počet otázok" />-->
    </DataGridColumns>
    <ButtonRowTemplate>
        <Button Color="Color.Primary" Disabled="(selectedQuiz is null)" Clicked="context.EditCommand.Clicked">Edit</Button>
         <Button Color="Color.Danger" Disabled="(selectedQuiz is null)" Clicked="context.DeleteCommand.Clicked">Delete</Button>
    </ButtonRowTemplate>
</DataGrid>
 @code {

    public Quiz? Quiz { get; set; }
    private List<Quiz> quizzes = new List<Quiz>();
    private Quiz selectedQuiz = new Quiz();

    protected override async Task OnInitializedAsync()
    {
        using var dbContext = DbFactory.CreateDbContext();
        quizzes = await dbContext.Kvizy.ToListAsync();
        await base.OnInitializedAsync();
    }
}

