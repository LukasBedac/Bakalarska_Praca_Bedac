@page "/QRCodeGen/{QuizGuid:guid}"
@layout PrintLayout
@using FRI_Quiz_Bakalarska_Praca.Data.Database
@using FRI_Quiz_Bakalarska_Praca.Data.Model
@using Microsoft.EntityFrameworkCore
@inject NavigationManager NavManager
@inject IDbContextFactory<ApplicationDbContext> DbFactory
<h3>QRCode generator</h3>


@if (liveQuiz)
{
    <div>
       
        <Label>QR kód kvízu</Label>
        <Blazorise.QRCode.QRCode Value="@($"/vyplnenieKvizu/{quiz.Hash}")"></Blazorise.QRCode.QRCode>
        
    </div>
} else
{   
    <Label>QR kódy otázok</Label>
    <div class="border-1 d-flex">
        @foreach (var question in questions)
        {
            <Label Class="d-flex flex-column">Otázka @question.Order</Label>
            <Blazorise.QRCode.QRCode Value="@($"/vyplnenieKvizu/{question.Hash}")" Class="d-inline flex-column"></Blazorise.QRCode.QRCode>
        }
    </div>
}


<div class=""> 
    <Buttons>
        <Button Color="Color.Primary" Type="ButtonType.Submit" Clicked="@ReturnToEditQuiz">Späť na editáciu kvízu</Button>
        <Button Color="Color.Secondary" Type="ButtonType.Link" Clicked="@RedirectToPrint" >Tlačiť</Button>
    </Buttons>
</div>


@code {
    private List<Question> questions = new List<Question>();
    private Quiz quiz;
    private TypKvizu typ;
    private bool liveQuiz;
    [Parameter]
    public Guid QuizGuid { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var dbContext = await DbFactory.CreateDbContextAsync();
        quiz = await dbContext.Quizzes.Include(q => q.Questions).FirstAsync(q => q.Hash == QuizGuid);
        if (quiz.Type == TypKvizu.kviz)
        {
            liveQuiz = false;
            questions = quiz.Questions.ToList();
        } else
        {
            liveQuiz = true;
            return;
        }
    }

    private void ReturnToEditQuiz()
    {
        NavManager.NavigateTo($"/vytvorKviz/{quiz.Hash}");
    }
    private void RedirectToPrint()
    {
        NavManager.NavigateTo($"/printPage/{quiz.Hash}");
    }
}
