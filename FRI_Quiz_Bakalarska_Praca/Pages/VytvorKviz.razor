@page "/vytvorKviz"

@using FRI_Quiz_Bakalarska_Praca.Data.Database
@using FRI_Quiz_Bakalarska_Praca.Data.Model
@using Microsoft.EntityFrameworkCore
@using TinyMCE.Blazor;
@inject IDbContextFactory<ApplicationDbContext> DbFactory
<PageTitle>Vytvorenie Kvizu</PageTitle>

<div>
    <Validations @ref="quizValidation" Mode="ValidationMode.Auto" ValidateOnLoad="true">
        <div class="left_side_quiz">
            <EditForm id="QuizId" Model="@newQuiz" OnValidSubmit="AddQuiz">
                
                <div class="mb-3">
                    <label class="form-label">Vyberte si typ kvizu:</label>      
                    <br />
                    <div class="form-check">
                        <input type="radio" class="form-check-input livekviz" name="flexRadioDefault" id="livekviz" @onclick="ToggleDisplay" checked="@isLiveKviz" />
                        <label for="livekviz" class="form-check-label pdright-2rem">Live Kvíz</label>
                        <input type="radio" class="form-check-input" name="flexRadioDefault" id="normalkviz" @onclick="ToggleDisplay" checked="@(!isLiveKviz)" />
                        <label for="normalkviz" class="form-check-label">Kvíz</label>
                    </div>
                </div>
                <div class="users">
                    <label class="form-label users-label">Pridat uzivatela: </label>
                    <Field class="users-input" >               
                            <TextEdit Placeholder="Tu môžete zadať používateľov, ktorý budú mať prístup na editáciu kvízu"></TextEdit>                                                            
                    </Field>
                </div>
                <div class="nastaveniaCasu">
                    <div class="datum">
                        <label class="nastaveniaCasuText">Dátum konca kvízu:</label>
                        <Addons>
                            <Addon AddonType="AddonType.Body">
                                    <DatePicker @bind-Dates="@dates" @ref="@datePicker" TValue="DateTime?" Min="DateTime.Now"
                                    SelectionMode="DateInputSelectionMode.Range" DisplayFormat="j/n/Y" Placeholder="Formát: DD/MM/YYYY"/>                  
                            </Addon>
                        </Addons>
                    </div>
                </div>
                <div class="nastaveniaCasu">
                    <div class="casOd">
                        <label class="nastaveniaCasuText">Zaciatok: </label>
                        <Addons>
                            <Addon AddonType="AddonType.Body">
                                <TimeEdit @bind-Time="@timeFrom" @ref="@timePicker" Min="DateTime.Now.TimeOfDay" TValue="TimeSpan?" />
                            </Addon>
                        </Addons>
                    </div>
                    <div class="casDo">
                        <label class="nastaveniaCasuText">Koniec: </label>
                        <Addons>
                            <Addon AddonType="AddonType.Body">
                                <TimeEdit @bind-Time="@timeTo" @ref="@timePicker" Min="@timeFrom" TValue="TimeSpan?" />
                            </Addon>
                        </Addons>
                    </div>
                </div>
                <div class="mb-3">
                    <label class="nazov-label">Nazov kvízu</label>
                    <InputText @bind-Value="newQuiz.QuizName" class="form-label">Nazov kvizu:</InputText>
                </div>
            </EditForm>
        </div>
            <div class="rigt_side_quiz">
                <Table Hoverable>
                    <TableHeader>
                        <TableRow>
                            <TableHeaderCell>Otazky</TableHeaderCell>
                            <TableHeaderCell>@newQuiz.QuizName</TableHeaderCell>
                            <TableHeaderCell></TableHeaderCell>
                        </TableRow>
                    </TableHeader>
                    <TableBody>
                        <TableRow>
                            <TableRowHeader>1</TableRowHeader>
                            <TableRowCell></TableRowCell>
                            <TableRowCell><Button Class="btn-secondary">Edit</Button></TableRowCell>
                        </TableRow>
                        <TableRow>
                            <TableRowHeader>2</TableRowHeader>
                            <TableRowCell></TableRowCell>
                            <TableRowCell><Button Class="btn-secondary">Edit</Button></TableRowCell>                    
                        </TableRow>
                        <TableRow>
                            <TableRowHeader>3</TableRowHeader>
                            <TableRowCell></TableRowCell>
                            <TableRowCell><Button Class="btn-secondary">Edit</Button></TableRowCell>                   
                        </TableRow>
                    </TableBody>
                </Table>
            </div>
        <EditForm id="QuestionForm" Model="newQuestion" OnValidSubmit="AddQuestion">
            @if (isLiveKviz)
            {
                <div class="mb-3">
                    <label class="form-label">Otázka</label>
                    <Editor Field="@(() => newQuestion.NameOfQuestion)" Conf="@textConf"></Editor>
                </div>
                <div class="odpovede-container">
                    <label>Zadajte odpovede</label>

                    <!--<div class="odpoved">
                        <label class="form-check-label"></label>
                        <Editor Field="() => newAnswer.Text" Conf="@odpovedeConf"></Editor>
                        <div>
                            <label class="odpoved-label">Spravna/Nespravna</label>
                            <input @bind-value="@newAnswer.Correct" type="checkbox" class="form-check odpoved-checkbox"/>
                            <input @bind-value="@newAnswer.Correct" type="checkbox" class="form-check odpoved-checkbox" />
                        </div>
                    </div>
                    <div class="odpoved">
                        <label class="form-check-label"></label>
                        <Editor Field="() => newAnswer.Text" Conf="@odpovedeConf" />
                        <input @bind-value="@newAnswer.Correct"  type="checkbox" class="form-check odpoved-checkbox" />
                    </div>
                    <div class="odpoved">
                        <label class="form-check-label"></label>
                        <Editor Field="() => newAnswer.Text" Conf="@odpovedeConf" />
                        <input @bind-value="@newAnswer.Correct" type="checkbox" class="form-check odpoved-checkbox" />
                    </div>
                    <div class="odpoved">
                        <label class="form-check-label"></label>
                        <Editor Field="() => newAnswer.Text" Conf="@odpovedeConf" />
                        <input @bind-value="@newAnswer.Correct" type="checkbox" class="form-check odpoved-checkbox" />
                    </div>-->
                        
            
                </div>
            }
    
            else
            {
                <div class="mb-1">
                    <label>Po pridani otazky sa zobrazi tabulka/form otazok -> zatial nebudem robit pretoze bude treba databaza </label>
                </div>
                
            }
                
        </EditForm>
        <button type="submit" form="QuizId" class="btn btn-primary">Submit</button>
        <button type="button" form="QuestionForm" class="btn btn-secondary" >Pridať otázku</button>
    </Validations>
</div>

@code {
    #region Fields 
    private Quiz newQuiz = new Quiz();
    private Question newQuestion = new Question();
    private Answer newAnswer = new Answer();
    private bool isLiveKviz = true;
    private IReadOnlyList<DateTime?> dates = new List<DateTime?>();
    private TimeSpan? timeFrom;
    private TimeSpan? timeTo;
    private DatePicker<DateTime?>? datePicker;
    private TimeEdit<TimeSpan?>? timePicker;
    private Validations? quizValidation;
    private int correctAnswersNumbers;
    #endregion Fields


    #region HelpMethods
    private void SetDates(IReadOnlyList<DateTime?> datesWeb)
    {
        newQuiz.DateFrom = datesWeb[0] + timeFrom;
        if (datesWeb.Count < 2)
        {
            newQuiz.DateTo = datesWeb[0] + timeTo;
        } else
        {
            newQuiz.DateTo = datesWeb[1] + timeTo;
        }

    }

    private void ToggleDisplay()
    {
        isLiveKviz = !isLiveKviz;
    }


    #endregion HelpMethods

    #region QuizMethods
    private async Task AddQuiz()
    {
        using var dbContext = DbFactory.CreateDbContext();
        SetDates(dates);
        if (isLiveKviz)
        {
            newQuiz.Type = TypKvizu.livekviz;
        } else
        {
            newQuiz.Type = TypKvizu.kviz;
        }

        if (newQuiz.User == null)
        {
            User local = dbContext.Users.Find(1);
            newQuiz.User = local;
        }

        dbContext.Kvizy.Add(newQuiz);
        await dbContext.SaveChangesAsync();

    }
    #endregion QuizMethods

    #region QuestionMethods
    private async Task AddQuestion()
    {
        using var dbContext = DbFactory.CreateDbContext();
        newQuestion.NameOfQuestion = newQuiz.Description;
        newQuestion.Order = 1;
        newQuestion.Answers.Add(newAnswer);
        dbContext.Otazky.Add(newQuestion);
        await dbContext.SaveChangesAsync();
    }

    #endregion QuestionMethods

    #region TinyMCE
    private Dictionary<string, object> odpovedeConf = new Dictionary<string, object>{
        {"plugins", "autolink media link image emoticons table"},
        {"menubar", false },
        {"toolbar", "undo redo | styles | bold italic underline | table | link image paste "},
        {"paste_data_images", "true"},
        {"height", "250px"},
        {"automatic_uploads", true },
        {"images_upload_url", "/UploadImage/"}
    };

    private Dictionary<string, object> textConf = new Dictionary<string, object>{
        {"menubar", false },
        {"plugins", "autolink media link image emoticons table"},
        {"toolbar", "undo redo | styles | bold italic underline | table link image "},
        {"paste_data_images", "true"},     
        {"width", "80%"},
        {"height", "200px"},
        {"automatic_uploads", true },
        {"images_upload_url", "/UploadImage/"}
    };
    #endregion TinyMCE
}
